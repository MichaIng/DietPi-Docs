name: Build test and quality checks
on: push
jobs:
  Actions:
    # https://github.com/actions/virtual-environments
    runs-on: ubuntu-latest
    steps:
    - name: Clone DietPi-Docs repository
      id: clone
      # https://github.com/actions/checkout/releases
      uses: actions/checkout@v2
    - name: Install latest Node.js for markdownlint-cli2
      run: |
        sudo npm i -g n
        sudo n latest
    - name: Install markdownlint-cli2
      run: sudo npm i -g markdownlint-cli2
    - name: Run markdownlint-cli2 to check Markdown files
      run: markdownlint-cli2 '**.md'
    - name: Setup Python for MkDocs and PySpelling
      id: python
      if: always() && steps.clone.outcome == 'success'
      # https://github.com/actions/setup-python/releases
      uses: actions/setup-python@v2
      with:
        # https://github.com/actions/python-versions/releases
        python-version: '3.9.7'
    - name: Install MkDocs
      id: mkdocs
      if: always() && steps.python.outcome == 'success'
      run: |
        pip3 install -U pip wheel 'setuptools<58'
        pip3 install -r requirements.txt
    - name: Build DietPi-Docs
      id: build
      if: always() && steps.mkdocs.outcome == 'success'
      run: mkdocs build -sd build/docs
    - name: Install PySpelling
      id: pyspelling
      if: always() && steps.build.outcome == 'success'
      run: |
        pip3 install -U pyspelling
        sudo apt-get -q update
        sudo apt-get -qq --no-install-recommends install aspell-en
    - name: Run PySpelling to check HTML files
      if: always() && steps.pyspelling.outcome == 'success'
      run: pyspelling -c .spellcheck.yml
    - name: Serve DietPi-Docs for lychee
      id: serve
      if: always() && steps.build.outcome == 'success'
      # Test links against docs without redirects, so that we are forced to update links to renamed pages
      run: |
        sed -i '/^- redirects:$/,/^$/d' mkdocs.yml
        mkdocs serve -s &
    - name: Download lychee
      id: lychee
      if: always() && steps.serve.outcome == 'success'
      run: |
        curl -sSfL "$(curl -sSfL https://api.github.com/repos/lycheeverse/lychee/releases/latest | mawk -F\" '/"browser_download_url.*x86_64-unknown-linux-gnu\.tar\.gz"/{print $4;exit}')" -o lychee.tar.gz
        tar xf lychee.tar.gz
        rm lychee.tar.gz
    - name: Run lychee to check README and HTML files
      if: always() && steps.lychee.outcome == 'success'
      run: |
        ./lychee -X head --github-token '${{ secrets.GITHUB_TOKEN }}'
        cd build
        find -type d \( -exec ../lychee --exclude '(fonts.gstatic.com|admin@koel.dev|localhost|bridges.torproject.org|www.spigotmc.org|root@192.168.1.20|127.0.0.1:8384|www.audiophonics.fr|help.realvnc.com)' -a 429 --github-token '${{ secrets.GITHUB_TOKEN }}' -b 'http://127.0.0.1:8000/{}/' '{}/*.html' \; -o -exec touch failed \; \)
        test ! -e failed
